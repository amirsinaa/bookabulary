/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/books": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.books.id"];
          name?: parameters["rowFilter.books.name"];
          description?: parameters["rowFilter.books.description"];
          profile_id?: parameters["rowFilter.books.profile_id"];
          author_id?: parameters["rowFilter.books.author_id"];
          created_at?: parameters["rowFilter.books.created_at"];
          updated_at?: parameters["rowFilter.books.updated_at"];
          publish_year?: parameters["rowFilter.books.publish_year"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["books"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** books */
          books?: definitions["books"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.books.id"];
          name?: parameters["rowFilter.books.name"];
          description?: parameters["rowFilter.books.description"];
          profile_id?: parameters["rowFilter.books.profile_id"];
          author_id?: parameters["rowFilter.books.author_id"];
          created_at?: parameters["rowFilter.books.created_at"];
          updated_at?: parameters["rowFilter.books.updated_at"];
          publish_year?: parameters["rowFilter.books.publish_year"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.books.id"];
          name?: parameters["rowFilter.books.name"];
          description?: parameters["rowFilter.books.description"];
          profile_id?: parameters["rowFilter.books.profile_id"];
          author_id?: parameters["rowFilter.books.author_id"];
          created_at?: parameters["rowFilter.books.created_at"];
          updated_at?: parameters["rowFilter.books.updated_at"];
          publish_year?: parameters["rowFilter.books.publish_year"];
        };
        body: {
          /** books */
          books?: definitions["books"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/vocabulary": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.vocabulary.id"];
          dictionary?: parameters["rowFilter.vocabulary.dictionary"];
          book_id?: parameters["rowFilter.vocabulary.book_id"];
          created_at?: parameters["rowFilter.vocabulary.created_at"];
          updated_at?: parameters["rowFilter.vocabulary.updated_at"];
          profile_id?: parameters["rowFilter.vocabulary.profile_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["vocabulary"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** vocabulary */
          vocabulary?: definitions["vocabulary"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.vocabulary.id"];
          dictionary?: parameters["rowFilter.vocabulary.dictionary"];
          book_id?: parameters["rowFilter.vocabulary.book_id"];
          created_at?: parameters["rowFilter.vocabulary.created_at"];
          updated_at?: parameters["rowFilter.vocabulary.updated_at"];
          profile_id?: parameters["rowFilter.vocabulary.profile_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.vocabulary.id"];
          dictionary?: parameters["rowFilter.vocabulary.dictionary"];
          book_id?: parameters["rowFilter.vocabulary.book_id"];
          created_at?: parameters["rowFilter.vocabulary.created_at"];
          updated_at?: parameters["rowFilter.vocabulary.updated_at"];
          profile_id?: parameters["rowFilter.vocabulary.profile_id"];
        };
        body: {
          /** vocabulary */
          vocabulary?: definitions["vocabulary"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/profiles": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          updated_at?: parameters["rowFilter.profiles.updated_at"];
          username?: parameters["rowFilter.profiles.username"];
          avatar_url?: parameters["rowFilter.profiles.avatar_url"];
          website?: parameters["rowFilter.profiles.website"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["profiles"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** profiles */
          profiles?: definitions["profiles"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          updated_at?: parameters["rowFilter.profiles.updated_at"];
          username?: parameters["rowFilter.profiles.username"];
          avatar_url?: parameters["rowFilter.profiles.avatar_url"];
          website?: parameters["rowFilter.profiles.website"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          updated_at?: parameters["rowFilter.profiles.updated_at"];
          username?: parameters["rowFilter.profiles.username"];
          avatar_url?: parameters["rowFilter.profiles.avatar_url"];
          website?: parameters["rowFilter.profiles.website"];
        };
        body: {
          /** profiles */
          profiles?: definitions["profiles"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/authors": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.authors.id"];
          name?: parameters["rowFilter.authors.name"];
          book_id?: parameters["rowFilter.authors.book_id"];
          created_at?: parameters["rowFilter.authors.created_at"];
          updated_at?: parameters["rowFilter.authors.updated_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["authors"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** authors */
          authors?: definitions["authors"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.authors.id"];
          name?: parameters["rowFilter.authors.name"];
          book_id?: parameters["rowFilter.authors.book_id"];
          created_at?: parameters["rowFilter.authors.created_at"];
          updated_at?: parameters["rowFilter.authors.updated_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.authors.id"];
          name?: parameters["rowFilter.authors.name"];
          book_id?: parameters["rowFilter.authors.book_id"];
          created_at?: parameters["rowFilter.authors.created_at"];
          updated_at?: parameters["rowFilter.authors.updated_at"];
        };
        body: {
          /** authors */
          authors?: definitions["authors"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  books: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /** Format: text */
    name?: string;
    /** Format: text */
    description?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    profile_id?: string;
    /** Format: uuid */
    author_id?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: timestamp with time zone */
    updated_at?: string;
    /** Format: character varying */
    publish_year?: string;
  };
  vocabulary: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /** Format: json */
    dictionary?: unknown;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `books.id`.<fk table='books' column='id'/>
     */
    book_id?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    profile_id?: string;
  };
  profiles: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /** Format: timestamp with time zone */
    updated_at?: string;
    /** Format: text */
    username?: string;
    /** Format: text */
    avatar_url?: string;
    /** Format: text */
    website?: string;
  };
  authors: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /** Format: text */
    name?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `books.id`.<fk table='books' column='id'/>
     */
    book_id?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at?: string;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description books */
  "body.books": definitions["books"];
  /** Format: uuid */
  "rowFilter.books.id": string;
  /** Format: text */
  "rowFilter.books.name": string;
  /** Format: text */
  "rowFilter.books.description": string;
  /** Format: uuid */
  "rowFilter.books.profile_id": string;
  /** Format: uuid */
  "rowFilter.books.author_id": string;
  /** Format: timestamp with time zone */
  "rowFilter.books.created_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.books.updated_at": string;
  /** Format: character varying */
  "rowFilter.books.publish_year": string;
  /** @description vocabulary */
  "body.vocabulary": definitions["vocabulary"];
  /** Format: uuid */
  "rowFilter.vocabulary.id": string;
  /** Format: json */
  "rowFilter.vocabulary.dictionary": string;
  /** Format: uuid */
  "rowFilter.vocabulary.book_id": string;
  /** Format: timestamp with time zone */
  "rowFilter.vocabulary.created_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.vocabulary.updated_at": string;
  /** Format: uuid */
  "rowFilter.vocabulary.profile_id": string;
  /** @description profiles */
  "body.profiles": definitions["profiles"];
  /** Format: uuid */
  "rowFilter.profiles.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.profiles.updated_at": string;
  /** Format: text */
  "rowFilter.profiles.username": string;
  /** Format: text */
  "rowFilter.profiles.avatar_url": string;
  /** Format: text */
  "rowFilter.profiles.website": string;
  /** @description authors */
  "body.authors": definitions["authors"];
  /** Format: uuid */
  "rowFilter.authors.id": string;
  /** Format: text */
  "rowFilter.authors.name": string;
  /** Format: uuid */
  "rowFilter.authors.book_id": string;
  /** Format: timestamp with time zone */
  "rowFilter.authors.created_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.authors.updated_at": string;
}

export interface operations {}

export interface external {}
